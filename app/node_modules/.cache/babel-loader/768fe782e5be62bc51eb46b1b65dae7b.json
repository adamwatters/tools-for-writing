{"ast":null,"code":"import _toConsumableArray from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adamwatters/tfw/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adamwatters/tfw/src/pages/Onward.js\";\nimport React, { Component } from \"react\";\nimport Tomato from \"../components/Tomato\";\nimport { mmddyyyy } from \"../utilities/datetime.ts\";\n\nvar BigPicture =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BigPicture, _Component);\n\n  function BigPicture() {\n    var _this;\n\n    _classCallCheck(this, BigPicture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BigPicture).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(BigPicture, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var committed = this.props.committed || [];\n      var paragraphs = committed // initialize accumulator with a zero because the first paragraph should be sliced from 0\n      .reduce(function (a, e, i) {\n        return e === \"<NEWPARAGRAPH>\" ? [].concat(_toConsumableArray(a), [i]) : a;\n      }, [0]).map(function (newParagraphIndex, index, arrayOfIndexes) {\n        if (newParagraphIndex === committed.length - 1) {\n          return committed.slice(newParagraphIndex);\n        } else {\n          return committed.slice(newParagraphIndex, arrayOfIndexes[index + 1]);\n        }\n      }).map(function (paragraphSubArray) {\n        return paragraphSubArray.filter(function (s) {\n          return s !== \"<NEWPARAGRAPH>\";\n        }).join(\" \").trim();\n      });\n      var blob = new Blob([paragraphs.join(\"\\n\")], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      var downloadUrl = URL.createObjectURL(blob);\n      return React.createElement(\"div\", {\n        onMouseEnter: function onMouseEnter() {\n          if (committed.length) {\n            _this2.setState({\n              active: true\n            });\n          }\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this2.setState({\n            active: false\n          });\n        },\n        style: {\n          width: \"280px\",\n          position: \"absolute\",\n          right: 0,\n          top: 0,\n          fontSize: \"6px\",\n          lineHeight: \"10px\",\n          opacity: 0.8,\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, paragraphs.map(function (p, i) {\n        return React.createElement(\"p\", {\n          style: {\n            minHeight: \"10px\",\n            backgroundColor: i === paragraphs.length - 1 ? \"rgba(0,0,0,.05)\" : \"white\"\n          },\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, p);\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, console.log(paragraphs)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, paragraphs.filter(function (a) {\n        return a !== \"\";\n      }) // return length, or if 0 return empty string\n      .reduce(function (a, e) {\n        return a + e.split(\" \").length;\n      }, 0) || \"\"), React.createElement(\"div\", {\n        download: \"tfw-ow-\".concat(mmddyyyy(), \".txt\"),\n        onClick: this.props.clearCommitted,\n        style: {\n          position: \"absolute\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          fontSize: \"18px\",\n          right: \"50%\",\n          top: 0,\n          bottom: 0,\n          color: \"black\",\n          textDecoration: \"none\",\n          transition: \"opacity 300ms\",\n          backgroundColor: \"white\",\n          opacity: this.state.active ? 0.8 : 0,\n          pointerEvents: this.state.active ? \"auto\" : \"none\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Clear\")), React.createElement(\"a\", {\n        download: \"tfw-ow-\".concat(mmddyyyy(), \".txt\"),\n        href: downloadUrl,\n        style: {\n          position: \"absolute\",\n          left: \"50%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          fontSize: \"18px\",\n          right: \"0\",\n          top: 0,\n          bottom: 0,\n          color: \"black\",\n          textDecoration: \"none\",\n          transition: \"opacity 300ms\",\n          backgroundColor: \"white\",\n          opacity: this.state.active ? 0.8 : 0,\n          pointerEvents: this.state.active ? \"auto\" : \"none\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Download\")));\n    }\n  }]);\n\n  return BigPicture;\n}(Component);\n\nvar OneWay =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(OneWay, _Component2);\n\n  function OneWay() {\n    var _this3;\n\n    _classCallCheck(this, OneWay);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(OneWay).call(this));\n    var persistedStateString = typeof window !== \"undefined\" ? window.localStorage.getItem(\"oneway.state\") : \"{}\";\n    _this3.state = persistedStateString ? JSON.parse(persistedStateString) : {\n      committed: [],\n      inTheWorks: \"\"\n    };\n    return _this3;\n  }\n\n  _createClass(OneWay, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(\"oneway.state\", JSON.stringify(this.state));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          committed = _this$state.committed,\n          inTheWorks = _this$state.inTheWorks;\n      return React.createElement(Tomato, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          position: \"absolute\",\n          left: \"30px\",\n          right: \"30px\",\n          top: \"30px\",\n          bottom: \"30px\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(BigPicture, {\n        clearCommitted: function clearCommitted() {\n          _this4.setState({\n            committed: []\n          });\n        },\n        committed: committed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: \"80%\",\n          maxWidth: \"700px\",\n          height: \"80px\",\n          position: \"center\",\n          margin: \"0 auto\",\n          display: \"flex\",\n          alignContent: \"stretch\",\n          justifyItems: \"stretch\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        style: {\n          height: \"50px\",\n          fontSize: \"16px\",\n          fontFamily: \"serif\",\n          border: \"1px solid lightgray\",\n          resize: \"none\",\n          padding: \"8px\",\n          outlineColor: \"lightgreen\",\n          flex: \"1 1 auto\"\n        },\n        type: \"text\",\n        value: inTheWorks,\n        onChange: function onChange(e) {\n          _this4.setState({\n            inTheWorks: e.target.value\n          });\n        },\n        onKeyDown: function onKeyDown(e) {\n          var committed = _this4.state.committed;\n\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n\n            if (inTheWorks !== \"\") {\n              _this4.setState({\n                committed: [].concat(_toConsumableArray(committed), [inTheWorks]),\n                inTheWorks: \"\"\n              });\n            }\n          }\n\n          if (e.key === \"Tab\") {\n            e.preventDefault(); // do not allow newparagraph in first position or two in a row\n\n            if (committed[committed.length - 1] !== \"<NEWPARAGRAPH>\" && committed.length !== 0) {\n              _this4.setState({\n                committed: [].concat(_toConsumableArray(committed), [\"<NEWPARAGRAPH>\"])\n              });\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return OneWay;\n}(Component);\n\nexport default OneWay;","map":{"version":3,"sources":["/Users/adamwatters/tfw/src/pages/Onward.js"],"names":["React","Component","Tomato","mmddyyyy","BigPicture","state","committed","props","paragraphs","reduce","a","e","i","map","newParagraphIndex","index","arrayOfIndexes","length","slice","paragraphSubArray","filter","s","join","trim","blob","Blob","type","downloadUrl","URL","createObjectURL","setState","active","width","position","right","top","fontSize","lineHeight","opacity","cursor","p","minHeight","backgroundColor","console","log","split","clearCommitted","left","display","justifyContent","alignItems","bottom","color","textDecoration","transition","pointerEvents","OneWay","persistedStateString","window","localStorage","getItem","JSON","parse","inTheWorks","setItem","stringify","flexDirection","maxWidth","height","margin","alignContent","justifyItems","fontFamily","border","resize","padding","outlineColor","flex","target","value","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tomato from \"../components/Tomato\";\nimport { mmddyyyy } from \"../utilities/datetime.ts\";\n\nclass BigPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    const committed = this.props.committed || [];\n    const paragraphs = committed\n      // initialize accumulator with a zero because the first paragraph should be sliced from 0\n      .reduce((a, e, i) => (e === \"<NEWPARAGRAPH>\" ? [...a, i] : a), [0])\n      .map((newParagraphIndex, index, arrayOfIndexes) => {\n        if (newParagraphIndex === committed.length - 1) {\n          return committed.slice(newParagraphIndex);\n        } else {\n          return committed.slice(newParagraphIndex, arrayOfIndexes[index + 1]);\n        }\n      })\n      .map(paragraphSubArray => {\n        return paragraphSubArray\n          .filter(s => s !== \"<NEWPARAGRAPH>\")\n          .join(\" \")\n          .trim();\n      });\n    const blob = new Blob([paragraphs.join(`\\n`)], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const downloadUrl = URL.createObjectURL(blob);\n    return (\n      <div\n        onMouseEnter={() => {\n          if (committed.length) {\n            this.setState({ active: true });\n          }\n        }}\n        onMouseLeave={() => {\n          this.setState({ active: false });\n        }}\n        style={{\n          width: `280px`,\n          position: \"absolute\",\n          right: 0,\n          top: 0,\n          fontSize: \"6px\",\n          lineHeight: \"10px\",\n          opacity: 0.8,\n          cursor: \"pointer\"\n        }}\n      >\n        {paragraphs.map((p, i) => (\n          <p\n            style={{\n              minHeight: \"10px\",\n              backgroundColor:\n                i === paragraphs.length - 1 ? \"rgba(0,0,0,.05)\" : \"white\"\n            }}\n            key={i}\n          >\n            {p}\n          </p>\n        ))}\n        <div>{console.log(paragraphs)}</div>\n        <div>\n          {paragraphs\n            .filter(a => a !== \"\")\n            // return length, or if 0 return empty string\n            .reduce((a, e) => a + e.split(\" \").length, 0) || \"\"}\n        </div>\n        <div\n          download={`tfw-ow-${mmddyyyy()}.txt`}\n          onClick={this.props.clearCommitted}\n          style={{\n            position: \"absolute\",\n            left: \"0\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n            fontSize: \"18px\",\n            right: \"50%\",\n            top: 0,\n            bottom: 0,\n            color: \"black\",\n            textDecoration: \"none\",\n            transition: \"opacity 300ms\",\n            backgroundColor: \"white\",\n            opacity: this.state.active ? 0.8 : 0,\n            pointerEvents: this.state.active ? \"auto\" : \"none\",\n            cursor: \"pointer\"\n          }}\n        >\n          <span>{`Clear`}</span>\n        </div>\n        <a\n          download={`tfw-ow-${mmddyyyy()}.txt`}\n          href={downloadUrl}\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n            fontSize: \"18px\",\n            right: \"0\",\n            top: 0,\n            bottom: 0,\n            color: \"black\",\n            textDecoration: \"none\",\n            transition: \"opacity 300ms\",\n            backgroundColor: \"white\",\n            opacity: this.state.active ? 0.8 : 0,\n            pointerEvents: this.state.active ? \"auto\" : \"none\",\n            cursor: \"pointer\"\n          }}\n        >\n          <span>{`Download`}</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nclass OneWay extends Component {\n  constructor() {\n    super();\n    const persistedStateString =\n      typeof window !== `undefined`\n        ? window.localStorage.getItem(\"oneway.state\")\n        : \"{}\";\n    this.state = persistedStateString\n      ? JSON.parse(persistedStateString)\n      : {\n          committed: [],\n          inTheWorks: \"\"\n        };\n  }\n\n  componentDidUpdate() {\n    if (typeof window !== `undefined`) {\n      window.localStorage.setItem(\"oneway.state\", JSON.stringify(this.state));\n    }\n  }\n\n  render() {\n    const { committed, inTheWorks } = this.state;\n    return (\n      <Tomato>\n        <div\n          style={{\n            display: \"flex\",\n            position: \"absolute\",\n            left: \"30px\",\n            right: \"30px\",\n            top: \"30px\",\n            bottom: \"30px\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          }}\n        >\n          <BigPicture\n            clearCommitted={() => {\n              this.setState({ committed: [] });\n            }}\n            committed={committed}\n          />\n          <div\n            style={{\n              width: `80%`,\n              maxWidth: \"700px\",\n              height: \"80px\",\n              position: \"center\",\n              margin: \"0 auto\",\n              display: \"flex\",\n              alignContent: \"stretch\",\n              justifyItems: \"stretch\"\n            }}\n          >\n            <textarea\n              style={{\n                height: \"50px\",\n                fontSize: \"16px\",\n                fontFamily: \"serif\",\n                border: \"1px solid lightgray\",\n                resize: \"none\",\n                padding: \"8px\",\n                outlineColor: \"lightgreen\",\n                flex: \"1 1 auto\"\n              }}\n              type=\"text\"\n              value={inTheWorks}\n              onChange={e => {\n                this.setState({ inTheWorks: e.target.value });\n              }}\n              onKeyDown={e => {\n                const { committed } = this.state;\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  if (inTheWorks !== \"\") {\n                    this.setState({\n                      committed: [...committed, inTheWorks],\n                      inTheWorks: \"\"\n                    });\n                  }\n                }\n                if (e.key === \"Tab\") {\n                  e.preventDefault();\n                  // do not allow newparagraph in first position or two in a row\n                  if (\n                    committed[committed.length - 1] !== \"<NEWPARAGRAPH>\" &&\n                    committed.length !== 0\n                  ) {\n                    this.setState({\n                      committed: [...committed, \"<NEWPARAGRAPH>\"]\n                    });\n                  }\n                }\n              }}\n            />\n          </div>\n        </div>\n      </Tomato>\n    );\n  }\n}\n\nexport default OneWay;\n"]},"metadata":{},"sourceType":"module"}